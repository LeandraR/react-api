{"map":"{\"version\":3,\"sources\":[\"/Users/leandra_reid/code/projects/react-api/src/components/StudentCard/StudentCard.js\",\"/Users/leandra_reid/code/projects/react-api/src/components/API/API.js\",\"/Users/leandra_reid/code/projects/react-api/src/App.js\",\"/Users/leandra_reid/code/projects/react-api/src/serviceWorker.js\",\"/Users/leandra_reid/code/projects/react-api/src/index.js\"],\"names\":[\"StudentCard\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"handleChange\",\"panel\",\"event\",\"expanded\",\"setState\",\"state\",\"student\",\"react_default\",\"a\",\"createElement\",\"className\",\"map\",\"item\",\"key\",\"id\",\"ExpansionPanel_default\",\"ExpansionPanelSummary_default\",\"src\",\"pic\",\"alt\",\"firstName\",\"lastName\",\"email\",\"company\",\"skill\",\"grades\",\"parseInt\",\"reduce\",\"p\",\"c\",\"length\",\"ExpansionPanelDetails_default\",\"index\",\"Component\",\"API\",\"handleSearch\",\"newStudents\",\"students\",\"filter\",\"toLowerCase\",\"includes\",\"target\",\"value\",\"console\",\"log\",\"bind\",\"assertThisInitialized\",\"input\",\"_this2\",\"fetch\",\"then\",\"res\",\"json\",\"data\",\"catch\",\"error\",\"type\",\"placeholder\",\"onChange\",\"components_StudentCard_StudentCard\",\"App\",\"components_API_API\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from 'react';\\nimport './StudentCard.css';\\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\\n\\nclass StudentCard extends Component {\\n    constructor(props){\\n        super(props);\\n        this.state = {\\n            expanded: null\\n        };\\n    }\\n\\n    handleChange = panel => (event, expanded) => {\\n        this.setState({\\n            expanded: expanded ? panel : false,\\n        });\\n    };\\n\\n    render() {\\n        const student = this.props.student;\\n\\n        return (\\n            <div className=\\\"StudentCard__main\\\">\\n                {student.map(item => (\\n                    <section  key={item.id}>\\n                        <ExpansionPanel className=\\\"StudentCard__col\\\">\\n                            <ExpansionPanelSummary >\\n                                <div className=\\\"studentCard\\\">\\n                                    <img className=\\\"studentPhoto\\\" src={item.pic} alt=\\\"student head shot\\\" />\\n                                    <div className=\\\"studentInfo\\\">\\n                                        <div className=\\\"StudentCard__row\\\">\\n                                            <h1>{item.firstName} {item.lastName}</h1>\\n                                            <i className=\\\"fas fa-plus\\\"></i>\\n                                        </div>\\n                                        <p>Email: {item.email}</p>\\n                                        <p>Company: {item.company}</p>\\n                                        <p>Skill: {item.skill}</p>\\n                                        <p>Average: {item.grades.map(item => parseInt(item)).reduce((p, c) => p + c, 0) / item.grades.length}%</p>\\n                                    </div>\\n\\n                            </div>\\n                            </ExpansionPanelSummary>\\n                            <ExpansionPanelDetails>\\n                                <div className=\\\"expanded StudentCard__col\\\">\\n                                    <ul className=\\\"panel\\\">\\n                                        {item.grades.map((item, index) => <li key={index}> Test{index + 1}: {item}% </li>)}\\n                                    </ul>\\n                                </div>\\n                            </ExpansionPanelDetails>\\n                        </ExpansionPanel>\\n\\n                    </section>\\n                ))}\\n            </div>\\n\\n        );\\n    }\\n}\\n\\nexport default StudentCard;\\n\\n\",\"import React, { Component } from 'react';\\nimport './API.css';\\nimport StudentCard from '../StudentCard'\\n\\nclass API extends Component {\\n    constructor(props) {\\n        super(props);\\n        this.handleChange = this.handleChange.bind(this);\\n        this.state = {\\n            students: [],\\n            input: \\\"\\\",\\n            newStudents:[]\\n        }\\n    }\\n\\n    handleChange(event) {\\n        this.setState({\\n            input: event.target.value\\n        });\\n        this.handleSearch(event)\\n    }\\n\\n    handleSearch = (event) => {\\n        let newStudents = this.state.students;\\n        newStudents = this.state.students.filter((item) => {\\n            return (\\n                item.firstName.toLowerCase().includes(event.target.value.toLowerCase()) ||\\n                item.lastName.toLowerCase().includes(event.target.value.toLowerCase())\\n            )\\n        });\\n        console.log(newStudents);\\n        this.setState({\\n            newStudents: newStudents\\n        })\\n    }\\n\\n\\n    componentDidMount(){\\n        fetch(`https://www.hatchways.io/api/assessment/students`)\\n            .then(res => res.json())\\n            .then(data =>\\n                this.setState({\\n                    students: data.students,\\n                    newStudents: data.students\\n                    })\\n                )\\n            .catch(error => console.log(error))\\n    }\\n\\n    render() {\\n        return (\\n            <main className=\\\"API__main\\\">\\n                <input className=\\\"API__search\\\" type=\\\"text\\\" placeholder=\\\"Search by name\\\" onChange={this.handleChange}/>\\n\\n                <StudentCard student={this.state.newStudents} />\\n            </main>\\n        );\\n    }\\n}\\n\\nexport default API;\\n\\n\",\"import React, { Component } from 'react';\\nimport './App.css';\\nimport API from './components/API';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <header className=\\\"App-header\\\">\\n        <API />\\n        </header>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\\n          );\\n        });\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n\\n              // Execute callback\\n              if (config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{157:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),s=n(22),c=n.n(s),l=(n(58),n(16)),u=n(17),o=n(20),i=n(18),d=n(19),m=(n(60),n(23)),h=(n(62),n(64),n(49)),p=n.n(h),f=n(52),E=n.n(f),v=n(51),w=n.n(v),b=function(e){function t(e){var n;return Object(l.a)(this,t),(n=Object(o.a)(this,Object(i.a)(t).call(this,e))).handleChange=function(e){return function(t,a){n.setState({expanded:!!a&&e})}},n.state={expanded:null},n}return Object(d.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){var e=this.props.student;return r.a.createElement(\"div\",{className:\"StudentCard__main\"},e.map(function(e){return r.a.createElement(\"section\",{key:e.id},r.a.createElement(p.a,{className:\"StudentCard__col\"},r.a.createElement(w.a,null,r.a.createElement(\"div\",{className:\"studentCard\"},r.a.createElement(\"img\",{className:\"studentPhoto\",src:e.pic,alt:\"student head shot\"}),r.a.createElement(\"div\",{className:\"studentInfo\"},r.a.createElement(\"div\",{className:\"StudentCard__row\"},r.a.createElement(\"h1\",null,e.firstName,\" \",e.lastName),r.a.createElement(\"i\",{className:\"fas fa-plus\"})),r.a.createElement(\"p\",null,\"Email: \",e.email),r.a.createElement(\"p\",null,\"Company: \",e.company),r.a.createElement(\"p\",null,\"Skill: \",e.skill),r.a.createElement(\"p\",null,\"Average: \",e.grades.map(function(e){return parseInt(e)}).reduce(function(e,t){return e+t},0)/e.grades.length,\"%\")))),r.a.createElement(E.a,null,r.a.createElement(\"div\",{className:\"expanded StudentCard__col\"},r.a.createElement(\"ul\",{className:\"panel\"},e.grades.map(function(e,t){return r.a.createElement(\"li\",{key:t},\" Test\",t+1,\": \",e,\"% \")}))))))}))}}]),t}(a.Component),g=function(e){function t(e){var n;return Object(l.a)(this,t),(n=Object(o.a)(this,Object(i.a)(t).call(this,e))).handleSearch=function(e){var t=n.state.students;t=n.state.students.filter(function(t){return t.firstName.toLowerCase().includes(e.target.value.toLowerCase())||t.lastName.toLowerCase().includes(e.target.value.toLowerCase())}),console.log(t),n.setState({newStudents:t})},n.handleChange=n.handleChange.bind(Object(m.a)(Object(m.a)(n))),n.state={students:[],input:\"\",newStudents:[]},n}return Object(d.a)(t,e),Object(u.a)(t,[{key:\"handleChange\",value:function(e){this.setState({input:e.target.value}),this.handleSearch(e)}},{key:\"componentDidMount\",value:function(){var e=this;fetch(\"https://www.hatchways.io/api/assessment/students\").then(function(e){return e.json()}).then(function(t){return e.setState({students:t.students,newStudents:t.students})}).catch(function(e){return console.log(e)})}},{key:\"render\",value:function(){return r.a.createElement(\"main\",{className:\"API__main\"},r.a.createElement(\"input\",{className:\"API__search\",type:\"text\",placeholder:\"Search by name\",onChange:this.handleChange}),r.a.createElement(b,{student:this.state.newStudents}))}}]),t}(a.Component),C=function(e){function t(){return Object(l.a)(this,t),Object(o.a)(this,Object(i.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"header\",{className:\"App-header\"},r.a.createElement(g,null)))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(r.a.createElement(C,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},53:function(e,t,n){e.exports=n(157)},58:function(e,t,n){},60:function(e,t,n){},62:function(e,t,n){},64:function(e,t,n){}},[[53,2,1]]]);","extractedComments":[]}